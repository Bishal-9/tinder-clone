[{"/media/bishal9/Repos/React/tinder-clone/src/reportWebVitals.js":"1","/media/bishal9/Repos/React/tinder-clone/src/App.js":"2","/media/bishal9/Repos/React/tinder-clone/src/Header.js":"3","/media/bishal9/Repos/React/tinder-clone/src/index.js":"4","/media/bishal9/Repos/React/tinder-clone/src/TinderCards.js":"5","/media/bishal9/Repos/React/tinder-clone/src/SwipeButtons.js":"6"},{"size":362,"mtime":1611653969020,"results":"7","hashOfConfig":"8"},{"size":291,"mtime":1611681227825,"results":"9","hashOfConfig":"8"},{"size":865,"mtime":1611676455026,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1611653969007,"results":"11","hashOfConfig":"8"},{"size":1730,"mtime":1611679847176,"results":"12","hashOfConfig":"8"},{"size":1165,"mtime":1611682009633,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ipuz5x",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/bishal9/Repos/React/tinder-clone/src/reportWebVitals.js",[],["29","30"],"/media/bishal9/Repos/React/tinder-clone/src/App.js",[],"/media/bishal9/Repos/React/tinder-clone/src/Header.js",[],"/media/bishal9/Repos/React/tinder-clone/src/index.js",[],["31","32"],"/media/bishal9/Repos/React/tinder-clone/src/TinderCards.js",["33"],"import React, { useState } from 'react'\nimport TinderCard from 'react-tinder-card'\nimport './TinderCards.css'\n\nfunction TinderCards() {\n\n    const [people, setPeople] = useState([\n        {\n            name: 'Elon Musk',\n            url: 'https://upload.wikimedia.org/wikipedia/commons/8/85/Elon_Musk_Royal_Society_%28crop1%29.jpg',\n        },\n        {\n            name: 'Jeff Bezos',\n            url: 'https://upload.wikimedia.org/wikipedia/commons/6/6c/Jeff_Bezos_at_Amazon_Spheres_Grand_Opening_in_Seattle_-_2018_%2839074799225%29_%28cropped%29.jpg',\n        },\n    ])\n\n    const swiped = (direction, nameToDelete) => {\n        console.log('removing: ' + nameToDelete)\n    }\n\n    const outOfFrame = (name) => {\n        console.log(name + ' left the screen')\n    }\n\n    return (\n        <div className=\"tinderCards\">\n            <div className=\"tinderCards__cardContainer\">\n                {\n                    people.map(person => (\n                        <TinderCard\n                            className=\"swipe\"\n                            key={person.name}\n                            preventSwipe={[\"up\", \"down\"]}\n                            onCardLeftScreen={() => outOfFrame(person.name)}\n                            onSwipe={(dir) => swiped(dir, person.name)}\n                        >\n                            <div\n                                style={{backgroundImage: `url(${person.url})`}}\n                                className=\"card\"\n                            >\n                                <h3>{person.name}</h3>\n                            </div>\n                        </TinderCard>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TinderCards\n","/media/bishal9/Repos/React/tinder-clone/src/SwipeButtons.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":20,"nodeType":"42","messageId":"43","endLine":7,"endColumn":29},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],["44"],["45"],"no-unused-vars","'setPeople' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]